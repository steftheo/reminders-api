'use strict';
var _ = require('lodash');
var Serializer = require('jsonapi-serializer');
var tc = require('type-check');
var links = require('./links');
var utils = require('./utils');
var typeCheck = tc.typeCheck;
var adapter = function (data, type, baseUrl, serializerOptions, adapterOptions) {
    // TODO ADD meta property of serializerOptions TO template
    var template = {};
    // Build links objects
    template.topLevelLinks = links.buildTop(baseUrl, type, adapterOptions.query, adapterOptions.pagination);
    template.dataLinks = links.buildSelf(baseUrl, type, adapterOptions.query);
    // Serializer process for a Model
    if (utils.isModel(data)) {
        var model = data;
        // Add list of valid attributes
        template.attributes = utils.getDataAttributesList(model);
        // Add relations (only if permitted)
        if (adapterOptions.relations) {
            _.forOwn(model.relations, function (relModel, relName) {
                // Skip if the relation is not permitted
                if (adapterOptions.relations === false ||
                    (typeCheck('[String]', adapterOptions.relations) &&
                        adapterOptions.relations.indexOf(relName) < 0)) {
                    return;
                }
                // Add relation to attribute list
                template.attributes.push(relName);
                // Add relation serialization
                template[relName] = utils.buildRelation(baseUrl, type, relName, utils.getDataAttributesList(relModel), true);
            });
        }
    }
    else if (utils.isCollection(data)) {
        var model = data.first();
        // Add list of valid attributes
        template.attributes = utils.getDataAttributesList(model);
    }
    // Override the template with the provided serializer options
    _.assign(template, serializerOptions);
    // Return the data in JSON API format
    var json = data.toJSON();
    return new Serializer(type, json, template);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = adapter;
//# sourceMappingURL=index.js.map