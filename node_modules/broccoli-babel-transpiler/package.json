{
  "_args": [
    [
      "broccoli-babel-transpiler@github:rtablada/broccoli-babel-transpiler#babel-6",
      "/Users/StefanTheofilos/Ironyard/week-07/reminders-api"
    ]
  ],
  "_from": "rtablada/broccoli-babel-transpiler#babel-6",
  "_id": "broccoli-babel-transpiler@5.4.5",
  "_inCache": true,
  "_installable": true,
  "_location": "/broccoli-babel-transpiler",
  "_phantomChildren": {},
  "_requested": {
    "hosted": {
      "directUrl": "https://raw.githubusercontent.com/rtablada/broccoli-babel-transpiler/babel-6/package.json",
      "gitUrl": "git://github.com/rtablada/broccoli-babel-transpiler.git#babel-6",
      "httpsUrl": "git+https://github.com/rtablada/broccoli-babel-transpiler.git#babel-6",
      "shortcut": "github:rtablada/broccoli-babel-transpiler#babel-6",
      "ssh": "git@github.com:rtablada/broccoli-babel-transpiler.git#babel-6",
      "sshUrl": "git+ssh://git@github.com/rtablada/broccoli-babel-transpiler.git#babel-6",
      "type": "github"
    },
    "name": "broccoli-babel-transpiler",
    "raw": "broccoli-babel-transpiler@github:rtablada/broccoli-babel-transpiler#babel-6",
    "rawSpec": "github:rtablada/broccoli-babel-transpiler#babel-6",
    "scope": null,
    "spec": "github:rtablada/broccoli-babel-transpiler#babel-6",
    "type": "hosted"
  },
  "_requiredBy": [
    "/",
    "/ember-cli"
  ],
  "_resolved": "git://github.com/rtablada/broccoli-babel-transpiler.git#5603a45b524621010a145672b5fccee8042cd4d2",
  "_shasum": "3e40b596cc851b7bc69050acc0982d18aef5b32c",
  "_shrinkwrap": null,
  "_spec": "broccoli-babel-transpiler@github:rtablada/broccoli-babel-transpiler#babel-6",
  "_where": "/Users/StefanTheofilos/Ironyard/week-07/reminders-api",
  "author": {
    "email": "nightire@very-geek.com",
    "name": "nightire",
    "url": "http://very-geek.com/"
  },
  "bugs": {
    "url": "https://github.com/babel/broccoli-babel-transpiler/issues"
  },
  "dependencies": {
    "babel-core": "^6.4.0",
    "babel-preset-es2015": "^6.3.13",
    "broccoli-funnel": "^1.0.0",
    "broccoli-merge-trees": "^1.0.0",
    "broccoli-persistent-filter": "^1.1.7",
    "clone": "^0.2.0",
    "json-stable-stringify": "^1.0.0"
  },
  "description": "A Broccoli plugin which transpile ES6 to readable ES5 by using babel.",
  "devDependencies": {
    "babel-plugin-transform-es2015-modules-amd": "^6.4.3",
    "broccoli": "^0.16.3",
    "broccoli-test-helpers": "0.0.8",
    "chai": "^3.5.0",
    "mkdirp": "^0.5.1",
    "mocha": "^2.4.5",
    "rimraf": "^2.4.2"
  },
  "gitHead": "5603a45b524621010a145672b5fccee8042cd4d2",
  "homepage": "https://github.com/babel/broccoli-babel-transpiler",
  "keywords": [
    "broccoli-plugin",
    "ecmascript",
    "ecmascript6",
    "es6",
    "harmony",
    "javascript",
    "js",
    "transpiler"
  ],
  "license": "MIT",
  "main": "index.js",
  "name": "broccoli-babel-transpiler",
  "optionalDependencies": {},
  "readme": "# broccoli-babel-transpiler\n\n[![Build Status](https://travis-ci.org/babel/broccoli-babel-transpiler.svg?branch=master)](https://travis-ci.org/babel/broccoli-babel-transpiler)\n[![Build status](https://ci.appveyor.com/api/projects/status/a0nbd84m1x4y5fp5?svg=true)](https://ci.appveyor.com/project/embercli/broccoli-babel-transpiler)\n\n\nA [Broccoli](https://github.com/broccolijs/broccoli) plugin which\ntranspiles ES6 to readable ES5 by using [babel](https://github.com/babel/babel).\n\n## How to install?\n\n```sh\n$ npm install broccoli-babel-transpiler --save-dev\n```\n\n## How to use?\n\nIn your `Brocfile.js`:\n\n```js\nvar esTranspiler = require('broccoli-babel-transpiler');\nvar scriptTree = esTranspiler(inputTree, options);\n```\n\nYou can find [options](https://babeljs.io/docs/usage/options) at babel's\ngithub repo.\n\n### Examples\n\nYou'll find three example projects using this plugin in the repository [broccoli-babel-examples](https://github.com/givanse/broccoli-babel-examples).\nEach one of them builds on top of the previous example so you can progess from bare minimum to ambitious development.\n\n * [es6-fruits](https://github.com/givanse/broccoli-babel-examples/tree/master/es6-fruits) - Execute a single ES6 script.\n * [es6-website](https://github.com/givanse/broccoli-babel-examples/tree/master/es6-website) - Build a simple website.\n * [es6-modules](https://github.com/givanse/broccoli-babel-examples/tree/master/es6-modules) - Handle modules and unit tests.\n \n## About source map\n\nCurrently this plugin only supports inline source map. If you need\nseparate source map feature, you're welcome to submit a pull request.\n\n## Advanced usage\n\n`filterExtensions` is an option to limit (or expand) the set of file extensions that will be transformed.\n\nThe default `filterExtension` is `js`\n\n```js\nvar esTranspiler = require('broccoli-babel-transpiler');\nvar scriptTree = esTranspiler(inputTree, {\n    filterExtensions:['js', 'es6'] // babelize both .js and .es6 files\n});\n```\n\n`exportModuleMetadata` is an option that can be used to write a JSON file to the output tree that gives you metadata about the tree's imports and exports.\n\n## Polyfill\n\nIn order to use some of the ES6 features you must include the Babel [polyfill](http://babeljs.io/docs/usage/polyfill/#usage-in-browser).\n\nYou don't always need this, review which features need the polyfill here: [ES6 Features](https://babeljs.io/docs/learn-es6).\n\n```js\nvar esTranspiler = require('broccoli-babel-transpiler');\nvar scriptTree = esTranspiler(inputTree, { browserPolyfill: true });\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/babel/broccoli-babel-transpiler.git"
  },
  "scripts": {
    "test": "mocha test.js",
    "test:debug": "mocha debug test.js"
  },
  "version": "5.4.5"
}
